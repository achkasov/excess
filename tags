!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/dach/src/excess/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
./xs	Makefile	/^.\/xs: .\/main.c .\/list.h .\/table.h$/;"	t
Data Model	README.md	/^## Data Model$/;"	s	chapter:Excess
Excess	README.md	/^# Excess$/;"	c
FOREACH	list.h	/^#define FOREACH(/;"	d
LIST_H_	list.h	/^#define LIST_H_$/;"	d
LIST_NAME_SZ	list.h	/^#define LIST_NAME_SZ /;"	d
LIST_NODE_PLACEHOLDER_CHAR	list.h	/^#define LIST_NODE_PLACEHOLDER_CHAR /;"	d
MAX	table.h	/^#define MAX(/;"	d
NT_DATETIME	list.h	/^    NT_DATETIME,$/;"	e	enum:__anon0b7938f70103
NT_EMPTY	list.h	/^    NT_EMPTY,$/;"	e	enum:__anon0b7938f70103
NT_FLOAT	list.h	/^    NT_FLOAT,$/;"	e	enum:__anon0b7938f70103
NT_INT	list.h	/^    NT_INT,$/;"	e	enum:__anon0b7938f70103
NT_LAST	list.h	/^    NT_LAST \/\/ Last type$/;"	e	enum:__anon0b7938f70103
NT_LIST	list.h	/^    NT_LIST,$/;"	e	enum:__anon0b7938f70103
NT_TEXT	list.h	/^    NT_TEXT,$/;"	e	enum:__anon0b7938f70103
PROMPT	main.c	/^#define PROMPT /;"	d	file:
Quick Start	README.md	/^## Quick Start$/;"	s	chapter:Excess
SHEREDOM_UTF8_H_INCLUDED	vendor/utf8.h	/^#define SHEREDOM_UTF8_H_INCLUDED$/;"	d
TABLE_H_	table.h	/^#define TABLE_H_$/;"	d
TBL_COLS_MAX	table.h	/^#define TBL_COLS_MAX /;"	d
TBL_COL_SPACER	table.h	/^#define TBL_COL_SPACER /;"	d
TBL_MAX_TXT_BUF_SZ	table.h	/^#define TBL_MAX_TXT_BUF_SZ /;"	d
UTF8_ATTRIBUTE	vendor/utf8.h	/^#define UTF8_ATTRIBUTE(/;"	d
Usage	README.md	/^## Usage$/;"	s	chapter:Excess
__anon0b7938f70103	list.h	/^typedef enum : int {$/;"	g	typeref:typename:int
__anon0b7938f7020a	list.h	/^typedef union {$/;"	u
__anon0b7938f7030a	list.h	/^    union {$/;"	u	struct:list_t
all	Makefile	/^all: .\/xs$/;"	t
child_tag	list.h	/^        node_type_t child_tag;$/;"	m	union:list_t::__anon0b7938f7030a	typeref:typename:node_type_t
clean	Makefile	/^clean: $/;"	t
data	list.h	/^    node_data_t data;$/;"	m	struct:node_t	typeref:typename:node_data_t
dt	list.h	/^    time_t dt;$/;"	m	union:__anon0b7938f7020a	typeref:typename:time_t
f	list.h	/^    double f;$/;"	m	union:__anon0b7938f7020a	typeref:typename:double
head	list.h	/^    node_t* head;$/;"	m	struct:list_t	typeref:typename:node_t *
i	list.h	/^    ssize_t i;$/;"	m	union:__anon0b7938f7020a	typeref:typename:ssize_t
index	list.h	/^    size_t index;$/;"	m	struct:node_t	typeref:typename:size_t
len	list.h	/^    size_t len;$/;"	m	struct:list_t	typeref:typename:size_t
list	list.h	/^    list_t* list;$/;"	m	union:__anon0b7938f7020a	typeref:typename:list_t *
list_alloc	list.h	/^list_t* list_alloc(void)$/;"	f	typeref:typename:list_t *
list_alloc_n	list.h	/^list_t* list_alloc_n(node_t node_template, const size_t len)$/;"	f	typeref:typename:list_t *
list_alloc_named	list.h	/^list_t* list_alloc_named(const char* name)$/;"	f	typeref:typename:list_t *
list_append	list.h	/^list_t* list_append(list_t* list, node_t* node)$/;"	f	typeref:typename:list_t *
list_append_n	list.h	/^list_t* list_append_n(list_t* list, const node_t node_template,$/;"	f	typeref:typename:list_t *
list_clear	list.h	/^list_t* list_clear(list_t* list)$/;"	f	typeref:typename:list_t *
list_concat	list.h	/^list_t* list_concat(list_t* list1, list_t* list2)$/;"	f	typeref:typename:list_t *
list_free	list.h	/^void list_free(list_t* list)$/;"	f	typeref:typename:void
list_get	list.h	/^node_t* list_get(const list_t* list, const size_t idx)$/;"	f	typeref:typename:node_t *
list_insert	list.h	/^list_t* list_insert(list_t* list, node_t* node, const size_t idx)$/;"	f	typeref:typename:list_t *
list_len	list.h	/^size_t list_len(const list_t* list)$/;"	f	typeref:typename:size_t
list_prepend	list.h	/^list_t* list_prepend(list_t* list, node_t* node)$/;"	f	typeref:typename:list_t *
list_remove	list.h	/^list_t* list_remove(list_t* list, const size_t idx)$/;"	f	typeref:typename:list_t *
list_resize	list.h	/^list_t* list_resize(list_t* list, const node_t node_template,$/;"	f	typeref:typename:list_t *
list_split_at	list.h	/^list_t* list_split_at(list_t* list1, const size_t idx)$/;"	f	typeref:typename:list_t *
list_t	list.h	/^struct list_t {$/;"	s
list_t	list.h	/^typedef struct list_t list_t;$/;"	t	typeref:struct:list_t
main	main.c	/^int main(void)$/;"	f	typeref:typename:int
meta	list.h	/^    } meta;$/;"	m	struct:list_t	typeref:union:list_t::__anon0b7938f7030a
name	list.h	/^    char name[LIST_NAME_SZ];$/;"	m	struct:list_t	typeref:typename:char[]
next	list.h	/^    struct node_t* next;$/;"	m	struct:node_t	typeref:struct:node_t *
node_alloc_datetime	list.h	/^node_t* node_alloc_datetime(const time_t value)$/;"	f	typeref:typename:node_t *
node_alloc_empty	list.h	/^node_t* node_alloc_empty(void)$/;"	f	typeref:typename:node_t *
node_alloc_float	list.h	/^node_t* node_alloc_float(const ssize_t value)$/;"	f	typeref:typename:node_t *
node_alloc_int	list.h	/^node_t* node_alloc_int(const ssize_t value)$/;"	f	typeref:typename:node_t *
node_alloc_list	list.h	/^node_t* node_alloc_list(list_t* value)$/;"	f	typeref:typename:node_t *
node_alloc_text	list.h	/^node_t* node_alloc_text(char* value)$/;"	f	typeref:typename:node_t *
node_data_t	list.h	/^} node_data_t;$/;"	t	typeref:union:__anon0b7938f7020a
node_empty	list.h	/^const node_t node_empty = {.tag = NT_EMPTY, .data = {NULL}, .next = NULL};$/;"	v	typeref:typename:const node_t
node_free	list.h	/^void node_free(node_t* node) {$/;"	f	typeref:typename:void
node_t	list.h	/^typedef struct node_t {$/;"	s
node_t	list.h	/^} node_t;$/;"	t	typeref:struct:node_t
node_to_str	list.h	/^void node_to_str(const node_t* node, char* buffer, const int buf_size)$/;"	f	typeref:typename:void
node_type_t	list.h	/^} node_type_t;$/;"	t	typeref:enum:__anon0b7938f70103
tag	list.h	/^    node_type_t tag;$/;"	m	struct:node_t	typeref:typename:node_type_t
tail	list.h	/^    node_t* tail;$/;"	m	struct:list_t	typeref:typename:node_t *
tbl_alloc	table.h	/^list_t* tbl_alloc(const size_t r, const size_t c)$/;"	f	typeref:typename:list_t *
tbl_insert_row_empty	table.h	/^list_t* tbl_insert_row_empty(list_t* tbl, size_t idx)$/;"	f	typeref:typename:list_t *
tbl_print	table.h	/^void tbl_print(list_t* tbl, const size_t col_width)$/;"	f	typeref:typename:void
tbl_rows_align	table.h	/^list_t* tbl_rows_align(list_t* tbl)$/;"	f	typeref:typename:list_t *
text	list.h	/^    char* text;$/;"	m	union:__anon0b7938f7020a	typeref:typename:char *
utf8_constexpr14	vendor/utf8.h	/^#define utf8_constexpr14 /;"	d
utf8_constexpr14_impl	vendor/utf8.h	/^#define utf8_constexpr14_impl /;"	d
utf8_cplusplus	vendor/utf8.h	/^#define utf8_cplusplus /;"	d
utf8_int32_t	vendor/utf8.h	/^typedef __int32 utf8_int32_t;$/;"	t	typeref:typename:__int32
utf8_int32_t	vendor/utf8.h	/^typedef int32_t utf8_int32_t;$/;"	t	typeref:typename:int32_t
utf8_int8_t	vendor/utf8.h	/^using utf8_int8_t = char8_t; \/* Introduced in C++20 *\/$/;"	t	typeref:typename:char8_t
utf8_nonnull	vendor/utf8.h	/^#define utf8_nonnull$/;"	d
utf8_null	vendor/utf8.h	/^#define utf8_null /;"	d
utf8_pure	vendor/utf8.h	/^#define utf8_pure$/;"	d
utf8_restrict	vendor/utf8.h	/^#define utf8_restrict /;"	d
utf8_weak	vendor/utf8.h	/^#define utf8_weak /;"	d
utf8casecmp	vendor/utf8.h	/^utf8_constexpr14_impl int utf8casecmp(const utf8_int8_t *src1,$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8casestr	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8casestr(const utf8_int8_t *haystack,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8cat	vendor/utf8.h	/^utf8_int8_t *utf8cat(utf8_int8_t *utf8_restrict dst,$/;"	f	typeref:typename:utf8_int8_t *
utf8catcodepoint	vendor/utf8.h	/^utf8_int8_t *utf8catcodepoint(utf8_int8_t *str, utf8_int32_t chr, size_t n) {$/;"	f	typeref:typename:utf8_int8_t *
utf8chr	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8chr(const utf8_int8_t *src,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8cmp	vendor/utf8.h	/^utf8_constexpr14_impl int utf8cmp(const utf8_int8_t *src1,$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8codepoint	vendor/utf8.h	/^utf8codepoint(const utf8_int8_t *utf8_restrict str,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8codepointcalcsize	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8codepointcalcsize(const utf8_int8_t *str) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8codepointsize	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8codepointsize(utf8_int32_t chr) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8cpy	vendor/utf8.h	/^utf8_int8_t *utf8cpy(utf8_int8_t *utf8_restrict dst,$/;"	f	typeref:typename:utf8_int8_t *
utf8cspn	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8cspn(const utf8_int8_t *src,$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8dup	vendor/utf8.h	/^utf8_int8_t *utf8dup(const utf8_int8_t *src) {$/;"	f	typeref:typename:utf8_int8_t *
utf8dup_ex	vendor/utf8.h	/^utf8_int8_t *utf8dup_ex(const utf8_int8_t *src,$/;"	f	typeref:typename:utf8_int8_t *
utf8islower	vendor/utf8.h	/^utf8_constexpr14_impl int utf8islower(utf8_int32_t chr) {$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8isupper	vendor/utf8.h	/^utf8_constexpr14_impl int utf8isupper(utf8_int32_t chr) {$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8len	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8len(const utf8_int8_t *str) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8lwr	vendor/utf8.h	/^void utf8lwr(utf8_int8_t *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8lwrcodepoint	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int32_t utf8lwrcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int32_t
utf8makevalid	vendor/utf8.h	/^int utf8makevalid(utf8_int8_t *str, const utf8_int32_t replacement) {$/;"	f	typeref:typename:int
utf8ncasecmp	vendor/utf8.h	/^utf8_constexpr14_impl int utf8ncasecmp(const utf8_int8_t *src1,$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8ncat	vendor/utf8.h	/^utf8_int8_t *utf8ncat(utf8_int8_t *utf8_restrict dst,$/;"	f	typeref:typename:utf8_int8_t *
utf8ncmp	vendor/utf8.h	/^utf8_constexpr14_impl int utf8ncmp(const utf8_int8_t *src1,$/;"	f	typeref:typename:utf8_constexpr14_impl int
utf8ncpy	vendor/utf8.h	/^utf8_int8_t *utf8ncpy(utf8_int8_t *utf8_restrict dst,$/;"	f	typeref:typename:utf8_int8_t *
utf8ndup	vendor/utf8.h	/^utf8_int8_t *utf8ndup(const utf8_int8_t *src, size_t n) {$/;"	f	typeref:typename:utf8_int8_t *
utf8ndup_ex	vendor/utf8.h	/^utf8_int8_t *utf8ndup_ex(const utf8_int8_t *src, size_t n,$/;"	f	typeref:typename:utf8_int8_t *
utf8nlen	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8nlen(const utf8_int8_t *str, size_t n) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8nsize_lazy	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8nsize_lazy(const utf8_int8_t *str, size_t n) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8nvalid	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8nvalid(const utf8_int8_t *str,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8pbrk	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8pbrk(const utf8_int8_t *str,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8rchr	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8rchr(const utf8_int8_t *src, int chr) {$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8rcodepoint	vendor/utf8.h	/^utf8rcodepoint(const utf8_int8_t *utf8_restrict str,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8size	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8size(const utf8_int8_t *str) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8size_lazy	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8size_lazy(const utf8_int8_t *str) {$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8spn	vendor/utf8.h	/^utf8_constexpr14_impl size_t utf8spn(const utf8_int8_t *src,$/;"	f	typeref:typename:utf8_constexpr14_impl size_t
utf8str	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8str(const utf8_int8_t *haystack,$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
utf8upr	vendor/utf8.h	/^void utf8upr(utf8_int8_t *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8uprcodepoint	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int32_t utf8uprcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int32_t
utf8valid	vendor/utf8.h	/^utf8_constexpr14_impl utf8_int8_t *utf8valid(const utf8_int8_t *str) {$/;"	f	typeref:typename:utf8_constexpr14_impl utf8_int8_t *
